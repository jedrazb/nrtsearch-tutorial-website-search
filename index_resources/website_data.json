[{"url": "https://j.blaszyk.me/", "title": "Jedr's Blog", "description": "Blog by Jedr Blaszyk. Bikepacking, photography & tech.", "headings": ["Jedr's Blog", "Norway Bikepacking: Trondheim to Bergen", "Iceland 4x4 Roadtrip", "Fly-in hike around Isle of Wight", "Kattegat loop, Denmark and Sweden", "Bikepacking & wild camping in Sweden", "Road cycling in London", "Sussex Coastal Marathon"], "content": "Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Norway Bikepacking: Trondheim to Bergen August 12, 2022 \u2022 \u2615\ufe0f 5 min read \u2022 57 Cycling from Trondheim to Bergen in 10 days. 1000km and 14,000m of elevation gain. Fjords, ferries and glaciers. Iceland 4x4 Roadtrip July 11, 2022 \u2022 \u2615\ufe0f 5 min read \u2022 57 Unique landscapes, smouldering volcanoes and blue glaciers complemented by Reykjavik coffee culture. Fly-in hike around Isle of Wight June 28, 2022 \u2022 \u2615\ufe0f 3 min read \u2022 32 Making the best out of the Platinum Jubilee weekend. Flying to Bebridge with tent, hiking for 3 days to the Needles. Kattegat loop, Denmark and Sweden January 22, 2022 \u2022 \u2615\ufe0f 2 min read \u2022 17 Bikepacking, wild camping trip around the Kattegat in Denmark and Sweden. Bikepacking & wild camping in Sweden August 25, 2020 \u2022 \u2615\ufe0f 2 min read \u2022 12 Baltic Sea, lakes and forests - 8 days of bikepacking and wild camping adventure. Road cycling in London April 25, 2020 \u2022 \u2615\ufe0f 3 min read \u2022 6 Looking for a great cycling route to escape the city with? Here are my personal favourites to get some miles in during the coronavirus lockdown. Sussex Coastal Marathon March 18, 2020 \u2022 \u2615\ufe0f 2 min read \u2022 4 My first marathon. Hilly, muddy and windy race, definitely worth it."}, {"url": "https://j.blaszyk.me/tech-blog/", "title": "Tech Blog \u2014 Jedr's Blog", "description": "Tech blog by Jedr Blaszyk.", "headings": ["Jedr's Blog", "Tech Blog", "Exploring Apache Lucene - Part 2: Search and Ranking", "The Tech Stack of Fast, Free, and Customizable Blog", "Exploring Apache Lucene - Part 1: The Index", "Geometric Deep Learning - an overview"], "content": "Tech Blog \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Tech Blog Exploring Apache Lucene - Part 2: Search and Ranking March 7, 2023 \u2022 \u2615\ufe0f 6 min read Diving deep into Lucene's search and ranking - data structures, query types, concurrent searching and custom scoring. The Tech Stack of Fast, Free, and Customizable Blog January 26, 2023 \u2022 \u2615\ufe0f 6 min read Building a blog with GatsbyJS, GraphQL, MDX and Github Pages. Customization, open-source and performance - completely for free. Exploring Apache Lucene - Part 1: The Index January 16, 2023 \u2022 \u2615\ufe0f 6 min read Exploring Apache Lucene's core concepts - inverted index, insertions and deletions. Geometric Deep Learning - an overview June 10, 2020 \u2022 \u2615\ufe0f 5 min read Series of posts covering learnings from my MEng thesis \"Geometric Deep Learning for Subcortical Brain Shape Analysis\"."}, {"url": "https://j.blaszyk.me/through-the-lens/", "title": "Through the Lens \u2014 Jedr's Blog", "description": "Capturing moments through the camera lens. Photo blog.", "headings": ["Jedr's Blog", "Through the Lens", "Mallorca in Spring", "Tenerife Pleasures", "Izery Mountains Bikepacking", "Norway Bikepacking", "Iceland Roadtrip"], "content": "Through the Lens \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Through the Lens Mallorca in Spring April 1, 2023 \u2022 Mallorca, Spain \u2022 13 Tenerife Pleasures December 12, 2022 \u2022 Tenerife \u2022 17 Izery Mountains Bikepacking September 5, 2022 \u2022 Karkonosze, Poland \u2022 13 Norway Bikepacking August 12, 2022 \u2022 Norway \u2022 20 Iceland Roadtrip July 11, 2022 \u2022 Iceland \u2022 19"}, {"url": "https://j.blaszyk.me/norway-bikepacking-trondheim-to-bergen/", "title": "Norway Bikepacking: Trondheim to Bergen \u2014 Jedr's Blog", "description": "Cycling from Trondheim to Bergen in 10 days. 1000km and 14,000m of elevation gain. Fjords, ferries and glaciers.", "headings": ["Jedr's Blog", "Norway Bikepacking: Trondheim to Bergen", "Route", "Wildcamping", "Journey", "Days 1-3: Norwegian climbing prelude", "Days 4-7: Up, up, up", "Trollstiegen", "Geiranger", "Sognefjellet", "Day 8-10: One more climb, and soon Bergen", "Photo gallery", "Jedr's Blog", "Comments"], "content": "Norway Bikepacking: Trondheim to Bergen \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Norway Bikepacking: Trondheim to Bergen Blog August 12, 2022 \u2022 \u2615\ufe0f 5 min read \u2022 57 Route Journey Photos Pack light, travel far. The motto of our journey. This year for the first time, we ditched rear racks and panniers in favour of a much lighter bikepacking setup. It paid off, as climbing from fjords, on sea level, to high mountain passes and glaciers suddenly became feasible. With an elevation gain of 14,000m, our journey was mostly about long uphills and rewarding views. Even seemingly flat segments would become zigzags when zooming in on the Komoot elevation profile. The weather was also a challenge. Packing so light, we had to carry everything we needed to cycle in the scorching sun, heavy rains or thunderstorms with snow lying around high up in the mountains. This year, I managed to pack a proper camera to capture moments from our adventure. Welcome to the relation from the 2022 Norway Bikepacking trip. Route We followed a segment of the Bikepacking Around Norway race ( Komoot route ). We started at Trondheim airport and had to cover 1000km and 14,000m of elevation gain to make it on time for our flight back from Bergen. The route led us along bike paths, remote roads and a few gravel sections. There were a lot of uphills and downhills; even when cycling around fjords, we rarely had a flat segment. We\u2019ve never had issues with tunnels as the race organisers did the work to check that all tunnels have either a cycling bypass or are cycling friendly. We heard stories from other bike packers that they had to take a lengthy diversion to go around long tunnels where cycling is forbidden. During our trip, we discovered this tunnel map created by the bikepacking community that can serve as a good reference when planning a route. Some interesting spots on our route included Trollstigen - a famous serpentine road, Geirangerfjord and Sognefjellet - the highest mountain pass in Norway. On our way, we had four ferry crossings which are usually free of charge for cyclists. Wildcamping The freedom to stay and camp anywhere in nature takes from the Everyman\u2019s Right (Norwegian Allemannsretten); it is a customary right of every human being to enjoy nature regardless of the ownership of the land. It\u2019s permitted to wild camp for a maximum of 2 nights in the same spot, on uncultivated land and at least 150m away from the nearest house. During our trip, we had no issues with finding wild camping spots. We camped in different locations, near lakes, fjords and forests. Journey Days 1-3: Norwegian climbing prelude When landing, I could see forests, snow-topped peaks, lakes and immense masses of clouds. Norway welcomed us with rain. It was only 13 degrees outside; chilly temperature struck us as we exited the plane. Upon arrival at the airport\u2019s main hall with our bikes packed in boxes, we learned that nothing gets lost in nature. Other bikepackers approached us, asking us to reuse our cardboard boxes. They also shared stories and gave tips for our journey. The most helpful advice was to ditch Apple weather in favour of a local weather provider, yr.no , which works fantastic for that region. Soon, we finished assembling our bikes, mounted the bags, and put on our warm, rainproof clothes. We were ready for the adventure to begin. The first two days of the trip were the coldest. I was unhappy with my choice of leaving GoreTex gloves and winter leg warmers at home. It was windy, cold, with almost constant drizzle. We spent the first night wild-camping on a lake; the temperature dropped so low that I felt cold in my 0 degrees comfort sleeping bag. On the second day, we cycled up to Oppdal, a ski resort town. It was still chilly outside, but at least it stopped raining. We spent the night camping near the city in the forest to get breakfast from the supermarket in the morning. The constant cold weather worried me about our plan to climb high mountain passes. Luckily, on the third day of the journey, the weather got a bit better, and the weather forecasts for the coming days were improving. We spend the third night wild camping at the Langfjorden, with a beautiful view of the fjord. It was a great spot to recover before coming days full of long climbs. Days 4-7: Up, up, up That was the most beautiful part of the trip. It finally became less rainy, and from time to time, we could even see the sun bursting through the thick layer of clouds. Better weather made us start the most challenging part of our trip in a good mood. Four big climbs awaited us: Trollsteigen, then two uphills around Geirangerfjord, and finally Sognefjellet mountain pass, which would take us to 1428m. Another challenge was food. There were (surprisingly!) no grocery stores high up in the mountains. Carrying all the necessary food up the mountains was not feasible as we wanted to save on weight during the climbs, and also our bags were already packed to their limits. Therefore, after every climb, we still had to cycle an extra distance to reach an open grocery store down in the valley. Trollstiegen Trollstigen is one of the most visually stunning cycling climbs I\u2019ve ever done. The climb starts at Romsdalsfjorden and then sneaks up the dramatic, rocky mountainside to 870m. It has 11 famously sharp turns; the average gradient for the central part of the climb hovers around 8%. Geiranger To begin our main climb that day, we first had to reach Geiranger by M\u00f8llsbygda. It meant starting our day with 630m of the uphill and steep descent down to the Geirangerfjord. We took a short break in the village, and soon we were off to a 1000m climb which spanned almost 17km. With surroundings created by the ice ages, when glaciers carved out fjords and sculpted the high mountains, calling this route impressive is an understatement. Sognefjellet Sognefjellet is northern Europe\u2019s highest mountain pass which took us to 1428m. It was a long 50km climb, starting in Lom. It took us almost 5 hours of cycling uphill to get to the top. Upon reaching the high point of the road, we could see the blue tongue of the glacier. We just managed to snap a few pictures at the top before the forecasted thunderstorms and heavy rain started. We were in luck; just 100m away, there was a great tourist shelter where we waited for almost 2 hours hoping for the weather to improve. Unfortunately, it didn\u2019t, so we put on rain jackets and every warm layer we had and proceeded on a long, rainy and windy descent to Lustrafjorden. Day 8-10: One more climb, and soon Bergen The weather changed completely; instead of cold and rain, we had to now ride in the scorching sun and heat. After passing the last 1000m \u201ctooth\u201d on the route elevation profile, we were done with big climbs and had a relatively flat segment to Bergen. The rainiest city in Europe didn\u2019t disappoint us. It rained close to 100% time that we had spent there. Looking for a shelter, we entered a fish market next to the harbour. There we had a proper seafood feast and some beers. On the last day of the trip, we cycled to Trek Bergen bike shop, as we had asked them to save cardboard bike boxes for us. They did it for free! We spent 2 hours disassembling and packing our bikes at the airport. We were heading home thinking about what bikepacking adventure awaits us next year. Photo gallery Check out all, high-resolution photos from the trip. \u2190 Iceland 4x4 Roadtrip Jedr's Blog Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments Contents Route Wildcamping Journey Days 1-3: Norwegian climbing prelude Days 4-7: Up, up, up Trollstiegen Geiranger Sognefjellet Day 8-10: One more climb, and soon Bergen"}, {"url": "https://j.blaszyk.me/iceland-roadtrip/", "title": "Iceland 4x4 Roadtrip \u2014 Jedr's Blog", "description": "Unique landscapes, smouldering volcanoes and blue glaciers complemented by Reykjavik coffee culture.", "headings": ["Jedr's Blog", "Iceland 4x4 Roadtrip", "Car rental", "Camping", "8 Day Roadtrip", "Roadtrip Itinerary", "Day 1: Ride to Sn\u00e6fellsnes Peninsula", "Day 2: Sn\u00e6fellsnes Peninsula", "Day 3: Golden Circle", "Day 4: Foss Day", "Day 5: Glacier Day", "Day 6: F-Roads Day", "Day 7: Reykjavik and Chill", "Day 8: Reykjanes Volcano and Airport", "Useful Resources", "Photo gallery", "Jedr's Blog", "Comments"], "content": "Iceland 4x4 Roadtrip \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Iceland 4x4 Roadtrip Blog July 11, 2022 \u2022 \u2615\ufe0f 5 min read \u2022 57 8 Day Roadtrip Plan Useful Resources Photos This summer, Ann and I decided to ditch warm, sunny destinations to explore the land of ice and fire - Iceland. It\u2019s a destination unlike any other in Europe. Its unique landscapes, smouldering volcanoes and blue glaciers complement the modern lifestyle and especially the coffee culture of the capital city Reykjavik. Car rental The best way to get around the country is to rent a car. There are two options to consider, either a regular 2WD or a 4x4 car suitable for driving on highland gravel roads, called F-roads. We went for the latter and on many occasions, it proved to be an absolute necessity for us to get to our planned destinations. One thing to note, most 4x4 rentals don\u2019t have insurance for river crossings - which are not as uncommon as it sounds on F-roads. Even with an off-road car, we avoided river crossings, as we witness other people flooding their cars - I managed to snap a photo (it\u2019s at the end of this post) of the rescue team preparing to get a car out of the river. It\u2019s recommended to check for current road conditions on road.is . Camping Camping is a great way to immerse in Icelandic nature, it\u2019s also way cheaper and more available than sparsely scattered hotels and guesthouses. Since we had the gear we opted for sleeping in a tent rather than a car. We took a lightweight three-season tent, (very) warm sleeping bags (0\u00b0C and -20\u00b0C comfort) and lots of warm and waterproof clothes. Sun never fully sets in the summer months, so we were always able to pitch the tent in daylight. The best time to visit is between June and August when the mean temperature is at its peak. It doesn\u2019t mean that there is a lot of sunlight. The weather during our stay was fairly cloudy with 2 \u201csunny\u201d days, a bit of rain, and a few fairly cold nights (around 5\u00b0C). 8 Day Roadtrip We stayed in Iceland for 8 days. We decided not to go 1,400km along the famous ring road, as we didn\u2019t have enough time to properly see all the sights on the way. Also, following the ring road means staying on the tarmac all the time. Since we had a 4x4 car we wanted to enjoy highland gravel roads. We decided to focus initially on the western and then southern parts of Iceland. On our way back to Reykjavik we followed F-roads through the Fjallabak Nature Reserve and Landmannalaugar - the most scenic part of our road trip. Roadtrip Itinerary Day 1: Ride to Sn\u00e6fellsnes Peninsula Day 2: Sn\u00e6fellsnes Peninsula Day 3: Golden Circle Day 4: Foss Day Day 5: Glacier Day Day 6: F-Roads Day Day 7: Reykjavik and Chill Day 8: Reykjanes Volcano and Airport Day 1: Ride to Sn\u00e6fellsnes Peninsula We landed at Keflavik airport in the afternoon and picked up our car from IcePol - a local car rental company (we had a great experience). There, we also rented some camping gear: a folding table and chairs, cutlery and a gas stove - so that we could have a proper morning coffee. Car pickup went smoothly and soon after landing we were already in the car driving towards Sn\u00e6fellsnes Penninsula. Passing by Reykjavik, we stopped by a big store to buy food for the next few days. On the way, we stopped by Ger\u00f0uberg Cliffs and Bjarnarfoss. After a few hours, we arrived at Hellissandur Camping. It was a nice campsite to spend the night with good grounds for pitching the tent. Day 2: Sn\u00e6fellsnes Peninsula We explored Sn\u00e6fellsnes Peninsula by following a rocky road to Skar\u00f0sv\u00edk Beach and Sv\u00f6rtuloft Lighthouse. Then we got to the main road which took us to a Hellnar View Point with Fj\u00f6ruh\u00fasi\u00f0 caf\u00e9 nearby, they offer great coffee and delicious fish soup, highly recommend. We also walked around Kirkjufell Mountain - known as Arrowhead Mountain from Game of Thrones. When going to our next campsite we stopped by Landbrotalaug Hot Spring, it was empty when we arrived. We spent the night at Mosskogar Camping - a great outpost for starting the Golden Circle tour the following day. Day 3: Golden Circle The Golden Circle follows the \u201cmust-see\u201d touristic destinations in Iceland. It includes \u00deingvellir National Park located in a rift valley created by the drifting apart of the North American and Eurasian tectonic plates, you can see the edges of the plates when walking around the park. The next stop is at the Geysir park, where the Great Geysir erupts every 10 minutes. Another landmark on the way is Gullfoss, a huge waterfall, definitely worth seeing. We also managed to jump into Kualaug hot spring, very muddy and small, but warm. We camped at Camping Flj\u00f3tshli\u00f0 which is located on the way to waterfalls and glaciers. Day 4: Foss Day Foss is the Icelandic word for waterfall, so on a Foss day, we\u2019ve seen many beautiful waterfalls. We visited Gluggafoss, Seljalandsfoss (there is a path leading \u201cinside\u201d) and Sk\u00f3gafoss (a great location for photos). We also took a break and hiked to Seljavallalaug Pool to chill in its warm water which comes from a local hot spring. It\u2019s an outdoor swimming pool located in the mountains, built in the year 1923 by a local who wanted to teach kids how to swim. Nowadays, it\u2019s open to everybody willing to hike up the mountains to jump into the pool. We ended our day with a hike to Solheimasandur Plane Wreck, but I don\u2019t think taking a photo there is worth hiking for 1.5 hours. We spent our 4th night in \u00deakgil camping, located high up in Katla geopark, on Katla volcano - one of Iceland\u2019s largest and most active volcanoes. It\u2019s located near Vik city. The road leading there requires a 4x4 car and is one of the most scenic routes we\u2019ve driven in Iceland. The campsite is located in a valley with many hiking trails which take you around the geopark. Day 5: Glacier Day My favourite part of the trip started on that day. First we needed to leave the campsite, it meant driving down on rough gravel roads to Vik. Then we headed south-east towards one of the biggest glaciers in Europe. On the way, we stopped by a beautiful foss: Svartifoss which is surrounded by hexagonal columns of basalt. Their geometric shape is a result of physical processes occurring inside a lava flow during a cool-down. The main attraction of the day were glacier lagoons, which still, blue waters were dotted with icebergs from the surrounding glacier. We\u2019ve also had a very nice chat with a bike-packer - Chris Hankey - who is spending two months this summer cycling around Iceland. Day 6: F-Roads Day Not driving on F-roads with a 4x4 rental is a sin. We spent this whole day driving on a rocky road to Landmannalaugar located in Fjallabak Nature Reserve - known for its natural geothermal hot springs and surrounding landscape - my favourite, the most picturesque spot of the trip. Day 7: Reykjavik and Chill We took it slow, spent some time in Reykjavik - tried famous hot dogs and got great coffee in Reykjavik Roasters cafe. Then we indulged ourselves with the 7 Step Icelandic Ritual in Sky Lagoon - located just outside the capital city. Day 8: Reykjanes Volcano and Airport It was a short day, we only had time for a hike to the Fagradalsfjall volcano, which erupted in 2021. We could still see the fumes coming out of cooling down lava. (Un)fortunately there were no active volcanic eruptions during our stay, so seeing red, hot, flowing lava was impossible. Useful Resources Hot Springs Map - useful map with plenty of hot springs locations. Campsites Map - absolute must when camping, includes all campsites in Iceland, has useful info like prices, whether they accept debit cards or what amenities are available. Much better than Google Maps! road.is - important website with current road conditions, check before driving or you might flood your rental car like that: Photo gallery Check out all, high-resolution photos from the trip. \u2190 Fly-in hike around Isle of Wight Norway Bikepacking: Trondheim to Bergen \u2192 Jedr's Blog Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments Contents Car rental Camping 8 Day Roadtrip Roadtrip Itinerary Day 1: Ride to Sn\u00e6fellsnes Peninsula Day 2: Sn\u00e6fellsnes Peninsula Day 3: Golden Circle Day 4: Foss Day Day 5: Glacier Day Day 6: F-Roads Day Day 7: Reykjavik and Chill Day 8: Reykjanes Volcano and Airport Useful Resources"}, {"url": "https://j.blaszyk.me/fly-in-hike-isle-of-wight/", "title": "Fly-in hike around Isle of Wight \u2014 Jedr's Blog", "description": "Making the best out of the Platinum Jubilee weekend. Flying to Bebridge with tent, hiking for 3 days to the Needles.", "headings": ["Jedr's Blog", "Fly-in hike around Isle of Wight", "Part 1: Redhill to Bembridge in the air", "Redhill airport", "Flying to Bembridge", "Part 2: The Hike", "Isle of Wight AONB", "Photo gallery", "Jedr's Blog", "Comments"], "content": "Fly-in hike around Isle of Wight \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Fly-in hike around Isle of Wight Blog June 28, 2022 \u2022 \u2615\ufe0f 3 min read \u2022 32 Part 1: Redhill to Bembridge in the air Part 2: The Hike Photos Part 1: Redhill to Bembridge in the air Isle of Wight, the largest island in England, is located south of London, roughly 40 mins away from the mainland by a ferry. Our hike around the Isle of Wight has been planned well in advance. Therefore, I was not expecting a message from Georgios, a few days before the hike, saying that his friend would be more than happy to give us a \u201clift\u201d to the Isle of Wight\u2019s Bembridge airport and have lunch with us there. Redhill airport Our trip started at Redhill airport, a small airport near London with an all-grass runway. The plane was already waiting for us in front of a hangar. We left the hiking equipment in the cabin and our pilot, Theo, led us to the pre-departure briefing. The pre-flight tasks included checking the weather, planning the route, contacting the destination airport about our scheduled arrival, and checking for airspace closures due to the Platinum Jubilee celebrations. All of that went smoothly and I thought that we are good to go. The issues began when we started figuring out the mass distribution, and our estimated takeoff and landing weight. The plane was marginally within the limits. Also, when checking manually, the extended-range fuel tanks had more fuel than what was reported in the aircraft logbook - the reason being that the fuel indicator displayed a maximum of 13 gallons, but the long-range tanks on our aircraft had 19 gallons capacity. After long 2 hours of talking to the air club members, it was agreed to take out all the unnecessary cargo from the plane (including extra weight to balance the plane when flying solo). Then we double-checked that we are within the limits and finally we got a green light for the takeoff from Theo, our pilot. Flying to Bembridge The weather was great for flying, it was sunny with a bit of cloud with great visibility. After taking off we quickly reached Eastbourne and then turned west towards Brighton. The clouds stayed away from the sea due to the temperature difference. Flying along the coast we enjoyed the great cloudless conditions and a stunning view so we took the opportunity to do some sharper turns, dives and climbs to feel the g-force. The best part was when I got the controls and was able to steer the plane for a bit for the first time in my life, a remarkable experience. We reached Bembridge airport on the Isle of Wight after roughly 45 mins in the air. Just before the landing, our pilot took a long turn offering us a great view of the island. We landed smoothly and parked the plane on the airfield next to many other small planes of people who flew in to Bembridge for the weekend to relax. The pub was just next to the airport. We had the famed ribs for lunch, meanwhile, other planes were landing and taking off close by. After lunch we parted our ways with Theo and began our hike, aiming to reach the Needles in 3 days. Part 2: The Hike Our hike started late in the afternoon after lunch at the Bembridge airport pub. The goal for the day was to reach Luccombe, 10 km away from the airport and spend the night wild camping in the forest. After having to jump a few fences, we got to the coastal path which goes around the island. After reaching Luccombe, we learned that the path leading to our camping spot was closed due to a landslide. Later into our hike, we could often see cracks in the clay and sand-ish cliffs. Often, larger land pieces cloud be seen laying below the cliffs, fallen from the top. We ended up setting up the tent in some random spot in the forest as it was getting dark. Isle of Wight AONB On day two of our adventure, we got to the Isle of Wight Area of Outstanding National Beauty (AONB), a big piece of land, stretching from the southern part of the island to the Needles. One thing we haven\u2019t accounted for is that there are not many places to get food there. We could only find 2 pubs marked on maps not far from the coastal path. So, our menu for the next 2 days consisted of British ales, fish and chips and other classics. The southwestern part of the island offered amazing views and the feel of nature, there was just sea, cliffs and endless fields. We spend the second night at the Paradise Cottage Campsite ran by a very nice old couple. On the 3rd day of our hike, we could already see the faint white-coloured cliffs in front of us, the Needles, the goal of our journey. Initially, we planned to hike for 4 days, but because of the forecasted storm we stretched our 3rd-day hike to 35kms and we managed to get to the Needles for the sunset. Then we ran for the bus which got us to Yarmouth, just in time to catch the last ferry back. Photo gallery Check out all, high-resolution photos from the trip. \u2190 Kattegat loop, Denmark and Sweden Iceland 4x4 Roadtrip \u2192 Jedr's Blog Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments Contents Part 1: Redhill to Bembridge in the air Redhill airport Flying to Bembridge Part 2: The Hike Isle of Wight AONB"}, {"url": "https://j.blaszyk.me/kattegat-loop-bikepacking/", "title": "Kattegat loop, Denmark and Sweden \u2014 Jedr's Blog", "description": "Bikepacking, wild camping trip around the Kattegat in Denmark and Sweden.", "headings": ["Jedr's Blog", "Kattegat loop, Denmark and Sweden", "Coastal Bike Path", "Sweden", "Denmark", "Copenhagen Pleasures", "Photo gallery", "Jedr's Blog", "Comments"], "content": "Kattegat loop, Denmark and Sweden \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Kattegat loop, Denmark and Sweden Blog January 22, 2022 \u2022 \u2615\ufe0f 2 min read \u2022 17 Coastal Bike Path Photos In the summer of 2021, my friends and I spent a week bikepacking the Kattegat - a sea area bounded by the Jutlandic peninsula in the west and Sweden in the east. We started in Ystad, cycled through Gothenburg, took a ferry to Frederikshavn, Denmark and closed the loop in Copenhagen. Coastal Bike Path Sweden Staying close to the sea meant that the route profile was rather flat with not that many hills. However, at the same time it was windy and the weather could be unpredictable. Starting from Ystad we followed the coastal bike path which led us through Malm\u00f6, Helsingborg, Halmstad and Gothenburg. The bikepacking-friendly \u201cEveryman\u2019s Right\u201d law allowed us to camp in the wild . We used this website to find camping spots. We spent two nights camping close to the sea, waking up to the sound of waves and brewing our morning coffee on the beach. We also camped in the wilderness shelter located at the lake in the forest close to Gothenburg ( map ). he lake water was just perfect for a refreshing evening swim. During the first 3 days of cycling, we covered 440km, averaging almost 150km per day. On the fourth day, we reached Gothenburg where we rested and explored the city. In the afternoon we caught a ferry to Frederikshavn in Denmark. Denmark On the other side of Kattegat, we were hit with harsh weather. It got cold and windy with some rainy days. Unfortunately, wild camping in Denmark is not allowed everywhere so we had to spend two nights in established campsites for a fee. However, there are several designated forests where wild camping is permitted. Here is an excellent map for finding such spots. Danish bike paths led us from Frederikshavn along the coast to Hadsund, Randers and eventually Aarhus. We got our next ferry to Sj\u00e6llands Odde , located about 100km from Copenhagen. Copenhagen Pleasures Our bikepacking adventure concluded in Copenhagen, Denmark\u2019s capital. We took two days to immerse ourselves in the city\u2019s vibrant life. Museums, delicious food or shops didn\u2019t surprise us as much as the hippie Freetown Christiania. Located on an island within the city, it came to life as a squatted military area in the early 70s. This anarchist commune is independent of Danish regulations. It has its own set of rules, for example, forbidding theft and hard drugs. It means that the Green Light District, a cannabis market located on Christiania\u2019s streets, can operate uninterrupted. I strongly suggest spending some time walking around and getting to know more about the history and existing housing regulations which I find quite amusing since Christiania originated as a squatter utopia. In total we spent 6 days on bikes, covering 730km. We rode gravel/touring bikes with 35-42mm tyres. For navigation, we used a mix of Komoot and bike route signs in Sweden, which worked well. This trip not only got us around Kattegat, but also marked our completion of cycling along the Swedish southern coastline (from Stockholm to Gothenburg). On our previous bikepacking trip we cycled from Stockholm to Ystad. That journey is described in previous blog post: Bikepacking & wild camping in Sweden . Photo gallery Check out all, high-resolution photos from the trip. \u2190 Bikepacking & wild camping in Sweden Fly-in hike around Isle of Wight \u2192 Jedr's Blog Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments Contents Coastal Bike Path Sweden Denmark Copenhagen Pleasures"}, {"url": "https://j.blaszyk.me/bikepacking-in-sweden/", "title": "Bikepacking & wild camping in Sweden \u2014 Jedr's Blog", "description": "Baltic Sea, lakes and forests - 8 days of bikepacking and wild camping adventure.", "headings": ["Jedr's Blog", "Bikepacking & wild camping in Sweden", "Route", "EuroVelo 10", "Route Stats", "Wild Camping", "Wilderness Shelters", "Photo gallery", "Wild Camping Spots", "Jedr's Blog", "Comments"], "content": "Bikepacking & wild camping in Sweden \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Bikepacking & wild camping in Sweden Blog August 25, 2020 \u2022 \u2615\ufe0f 2 min read \u2022 12 Route Wild Camping Photos Wild Camping Spots Earlier this summer my friends and I packed our bikes, took a train to Gda\u0144sk and boarded a ferry headed for Nyn\u00e4shamn, Sweden. After an 18-hour cruise, our Swedish bike packing adventure began. We cycled along EuroVelo 10 - the Baltic Sea Cycle Route. It follows endless tarmac and gravel roads along the Baltic Sea. The Swedish coastline includes beaches, cliffs, woodland, ports and marinas as well as countless large and small islands - dream scenery for bikepackers. On this journey, we\u2019ve lost count of how many times we stopped to swim in the warm summer lakes and cold Baltic Sea. Also, with Allemansr\u00e4tt, a Swedish law that allows everyone to roam and camp where they please, we were spoilt with campsite choices. Quite a few times friendly locals helped us find camping spots. Route EuroVelo 10 We followed the EuroVelo 10 - Baltic Sea Cycle Route, southwards from Stockholm, the country\u2019s vibrant capital, to Malm\u00f6, mostly along the sea. We cycled from Stockholm (Nyn\u00e4shamn port) to Ystad, the point of departure for our ferry back home. The bikepacking journey took 8 days. We averaged 115km a day. The route was hilly with many short up- and downhills. For the first 4 days we averaged more than 1000m elevation gain per day. It was quite straining especially when cycling on a fully loaded bike - we carried around 20kg of equipment and supplies. The route became flatter and easier as we approached Kalmar and Karlskrona. The wind was not a big problem as for the majority of the route we were riding covered by trees. A gravel bike is advisible as much of the route leads along gravel and tarmac roads. 35mm-42mm tyres worked great for us. Route Stats Total distance Total elevation Time 895km 5903m 41h 52min Wild Camping \u201cThe Everyman\u2019s Right\u201d in Sweden allows people to camp anywhere in the wilderness as long as it is not private property. It makes bikepacking affordable in an otherwise expensive country. We camped in a wild camp for 8 days, usually very close to the Baltic sea or some lake. You trade views and proximity to Swedish nature for utilities like showers or toilets. Swimming in lakes and having access to the bathroom at gas stations can make up for all the pain. Wilderness Shelters Sweden also offers a wide variety wilderness shelters throughout the country. It is possible to spend the night there for free. Usually, you will an open fireplace, tables and benches. Local people told us it was fine to set up a tent next to the hut. On a cold, windy night the hut might not be enough to protect you from the wind. Photo gallery Check out all, high-resolution photos from the trip. Wild Camping Spots GPS trace Camping spot Day 1 We spent the night near Tullgarn on a rocky hill. Amazing spot with views. You have to leave the bike at the bottom and carry your equipment on foot: approximate GPS location . Day 2 Camped at Ensj\u00f6n lake. Day 3 Camped near Gamleby at the seaside. Day 4 We finished near Oskarshamn, camped at the seaside. It\u2019s quite hard to find a good spot close to the city. It\u2019s better to go a bit further away. Day 5 Camped in the forest near Tors\u00e5s. Day 6 Camped in the shelter in J\u00e4rnavik: approximate location . Day 7 Camped in the shelter in Kivik: approximate location . Day 8 Night on the ferry \ud83d\udef3 \u2190 Road cycling in London Kattegat loop, Denmark and Sweden \u2192 Jedr's Blog Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments Contents Route EuroVelo 10 Route Stats Wild Camping Wilderness Shelters Wild Camping Spots"}, {"url": "https://j.blaszyk.me/cycling-in-london/", "title": "Road cycling in London \u2014 Jedr's Blog", "description": "Looking for a great cycling route to escape the city with? Here are my personal favourites to get some miles in during the coronavirus lockdown.", "headings": ["Jedr's Blog", "Road cycling in London", "Short routes", "Richmond park loops", "Regent\u2019s park loops", "Longer routes", "London to Windsor", "London to Box Hill", "London to \u2026", "Brighton (and Seven Sisters)", "Oxford", "Looking for more routes?", "Jedr's Blog", "Comments"], "content": "Road cycling in London \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Road cycling in London Blog April 25, 2020 \u2022 \u2615\ufe0f 3 min read \u2022 6 Looking for a great London cycling route to escape the city with? Refer to my favourite routes to hit the road and get some safe, solo miles in and cycle during the coronavirus lockdown. First thing I did after moving in to London was getting a proper road bike and I would recommend it to anyone. Places like Richmond Park or Regent\u2019s park are thriving with the cycling culture on every weekend. Moreover, cycling is a great option for the everyday commute and it allows you to explore London and the neighbouring towns. Here is a list of my favourite places for cycling after living 4 years in London. Early Saturday morning in Roehampton Gate cafe in Richmond Park. Disclaimer: This photo was taken in Fall 2019, cycling in Richmond is forbidden as of now because of COVID. Short routes Richmond park loops A short ride out from the centre, the city\u2019s most popular spot for a few hours of training \u2014 even some of the cycling stars, including\u00a0Fabien Cancellara, have been known to ride here. At any time you can see cyclists lapping the perimeter road, a circuit of about 12km with two climbs. And on Saturday mornings overenthusiastic local club members form huge pelotons and race around, full of Tour de France delusions, barking at anyone who gets in their way. Strava activity Regent\u2019s park loops Regent\u2019s Park\u2019s central location makes it handy for a quick spin in the city. The road around the outer edge is 4.5km long, perfectly flat and fairly light on traffic, so it\u2019s largely cycle-friendly and you\u2019ll find a lot of other riders and runners here. Don\u2019t jump red lights when you train there. Strava activity Longer routes London to Windsor A flat and fast route from Richmond Park out to Royal Windsor. The profile is pancake flat, so it\u2019s perfect if you\u2019re looking for a longer ride without the hills. The return leg is shorter and faster, so you\u2019ll be home in no time. I was recommended to stop by at Cinnamon Caf\u00e9 to try their cinnamon buns but unfortunatetly it was closed due to the coronavirus. Strava activity London to Box Hill South West London and Surrey are famous when it comes to cycling. The 2012 olympic road race, and the Prudential Ride London route that followed, have firmly put Surrey on the cycling map. Starting in Richmond Park, this route heads out into the Surrey Hills and to the famous Box Hill, a (not so) steep climb of 2.5km and 129m elevation gain. According to Strava\u2019s leaderboard for the Box Hill climb there are more than 120,000 attempts recorded on the app, with the best time of just under 5 minutes. Box Hill climb. Picture thanks to Cycling Weekly . This is my favourite bike ride so far. The route I followed goes through Richmond, Bushy Park and then follows to Surrey Hills through quiet and cycling friendly roads. The return leg, after Box Hill, is not as nice with more busy roads. Strava activity London to \u2026 Brighton (and Seven Sisters) From the city, through the suburbs and into the countryside, with the testing climb of Ditchling Beacon just before the beach below, the London to Brighton route is full of action and should be around 100km from the center of London. If you are looking for more adventures you can add some miles by cycling to Seven Sisters cliffs and back. You can come back to London by bike or take a train back, I recommend the latter. You can refer to this GPX trace on Strava for a route to Brighton and this trace for the route to Seven Sisters cliffs from Brighton. Direct route to the coastline through a sheep pasture > muddy road. Seven Sister cliffs and English Channel. Oxford Cycling from London to Oxford can be cumbersome, since there no signle best route there. You need to trade off going fast on busy roads and going slower on quiet roads with bad asphalt (not recommended for a road bike). I followed a 120km route similar to this one but I needed to check maps often as many intersections lacked signs. If you have more sturdy bike you might consider following the Thames Valley bike route . My friend Szymon and I decided to cycle to Oxford just to try Moo-Moo\u2019s milkshakes , so don\u2019t forget to give it a go once you reach the city. I recommend going back to London by train. Looking for more routes? For those who want to explore even more routes I strongly recommend Strava\u2019s Local Guide for London and Dirty Wkd London routes . You can find there GPX trace with a detailed descriptions of the routes. \u2190 Sussex Coastal Marathon Bikepacking & wild camping in Sweden \u2192 Jedr's Blog Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments Contents Short routes Richmond park loops Regent's park loops Longer routes London to Windsor London to Box Hill London to ... Brighton (and Seven Sisters) Oxford Looking for more routes?"}, {"url": "https://j.blaszyk.me/sussex-coastal-marathon/", "title": "Sussex Coastal Marathon \u2014 Jedr's Blog", "description": "My first marathon. Hilly, muddy and windy race, definitely worth it.", "headings": ["Jedr's Blog", "Sussex Coastal Marathon", "Running for the climate change", "My experience", "Photos", "COVID-19", "Jedr's Blog", "Comments"], "content": "Sussex Coastal Marathon \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Sussex Coastal Marathon Blog March 18, 2020 \u2022 \u2615\ufe0f 2 min read \u2022 4 This race is part of the coastal trail series which are scenic and challenging runs mostly around the coastal paths in the UK. A great thing about the Sussex Coastal Marathon is that the route includes the Seven Sisters cliffs and offers spectacular views over the English Channel. To be honest, the localisation and the views were the main reason why my flatmate, Eduardo, managed to convince me to sign up a few months ago. Watching the promo of the race got me hooked up and gave me a lot of motivation during the training. Running for the climate change Together with my friend Ed we decided to use this challenge as an opportunity to make a difference. We managed to raise 200\u00a3 , all of which was forwarded to The Climate Group that specialises on the environment. Big thank you to everyone who donated! My experience The marathon was rather a hard one, definitely harder than I had expected. It had almost 1700m (5600ft) of elevation gain. There was quite a few muddy sections of the trail as it was raining the night before the race. During the run it was quite windy with a bit of rain. I was definitely underprepared. My training was mostly based on running in Hyde Park which offers a few flat \u201ctrail\u201d routes. Looking back, I should have included at least some hilly runs in my routine to prepare my legs better. Upon starting the marathon I was confident that I would be able to run all the way to the finish line. I did a few long runs as a part of my training and I felt prepared. To my disappointment, a lot of hilly sections and muddy trail took their toll and made me walk a lot after hitting 30km mark. The result? Time 5hr 17min is definitely not what I was hoping for but it\u2019s a good motivation to carry on with the training to improve myself in the future. I\u2019m already looking forward to new cool challenges I can sign up for. If you have a suggestion, lmk on Twitter! Photos Before the race. Waiting with the others to start. Views of the English Channel at around 30km. Super happy after completing my first marathon. COVID-19 I did ask myself a question of whether or not should I participate. In the end I decided to take a calculated risk. Only a handful of people took part in this race, also the distances between runners were big and the organisers made sure to minimise physical touch points: all the runners were required to carry their own food and water. Road cycling in London \u2192 Jedr's Blog Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments Contents Running for the climate change My experience Photos COVID-19"}, {"url": "https://j.blaszyk.me/tech-blog/exploring-apache-lucene-search-and-ranking/", "title": "Exploring Apache Lucene - Part 2: Search and Ranking \u2014 Jedr's Blog", "description": "Diving deep into Lucene's search and ranking - data structures, query types, concurrent searching and custom scoring.", "headings": ["Jedr's Blog", "Exploring Apache Lucene - Part 2: Search and Ranking", "Efficient search", "Index data structures", "Query Types", "Concurrent query execution", "Document scoring", "Custom similarity scoring", "Jedr's Blog \u2022 Tech Blog", "Comments"], "content": "Exploring Apache Lucene - Part 2: Search and Ranking \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Exploring Apache Lucene - Part 2: Search and Ranking Tech Blog March 7, 2023 \u2022 \u2615\ufe0f 6 min read In the last post Exploring Apache Lucene - Part 1: The Index , we took a deep dive to look at the building blocks of the Lucene index. Here is a quick recap of key points: The Lucene index is built using an inverted index, a data structure that maps terms to their corresponding documents. In an inverted index, each term is associated with a list of documents that contain that term. This allows for fast lookups of documents that match a given term or set of terms. The index is split into index segments, which contain a subset of documents, to allow for more efficient searching and a reduction in memory requirements. Segments are never modified in-place, so they can be cached easily by the filesystem. Segments can be searched concurrently lock-free, with no risk of race conditions. It also allows concurrent query execution. It is not just about inverted indexes in Lucene. For example, doc values are a columnar data structure that stores the values of a field for each document in the index. It allows for fast lookups of field values without having to load the entire document - useful for efficient sorting and faceting. Now let\u2019s focus on what factors enable Lucene to be so effective at search and ranking, and how its design makes it suitable to run at scale. But let\u2019s not forget that the true value of Lucene is its community - hundreds of developers who have committed to the project since it was open-sourced in 2001. Efficient search Index data structures One of the key reasons for Lucene\u2019s performance is its efficient use of data structures. Inverted index and doc values are effective for fast lookups for different query types, while index segments ensure efficient resource consumption and concurrent read access for queries. There are still more \u201ctricks\u201d that Lucene uses to optimize query performance. Bitsets are used in Lucene to represent sets of documents that match a particular query. Bitsets use one bit to represent the presence or absence of a document in the set, which makes them very compact and efficient to use. Bitsets can also be applied to perform Boolean operations on sets of documents. For example, Lucene can leverage bitsets to efficiently perform OR, AND, and NOT operations, allowing complex queries to be executed quickly and efficiently. Moreover, bitsets are used to handle delete operations - documents in the segment as marked as deleted deleted - until the documents are actually removed during the segment merge. Caches help to improve Lucene\u2019s search performance. The field cache is used to cache field values across multiple documents, while the filter cache is used to cache the results of expensive filters. Filter caches are encoded as bitsets to determine which document match the filter. The query cache is used to cache the results of previously executed queries. If a subsequent query is found to be identical to a previously executed query, the cached result can be returned instead of executing the query again. Lucene also uses finite-state transducers (FSTs) - they are compact and efficient data structures that allow for fast lookups of key-value pairs. It\u2019s used for features like auto-suggest and spell-checking - Lucene uses the FST to efficiently look up all possible completions of the partially typed, or misspelled query. FSTs provide fast lookups of term frequencies, prefixes and other metadata associated with each term, useful in a variety of search-related operations. More about this data structure can be read in: Using Finite State Transducers in Lucene . Block trees are used to represent the posting list - a set of doc ids and offsets associated with each term in an inverted index. By compressing the posting lists, Lucene can reduce the amount of disk I/O required to access the posting lists during search operations. This can result in significant performance improvements, especially when dealing with large indexes. Block trees are also used to implement skip lists, which allow for fast skipping over irrelevant documents during search operations. Skip lists are used to quickly navigate the posting lists associated with each term in a search index, allowing for fast identification of relevant documents. Query Types Lucene\u2019s extensive support for different query types allows its community to build sophisticated search applications that can handle a wide range of use cases. Lucene query types are modular, therefore making it possible to combine different queries to create more complex search queries. Here are some commonly used Lucene query types. Query Role Term Query matches documents that contain a specific term Phrase Query matches documents that contain a specific sequence of terms in order Boolean Query allows for the combination of multiple queries using boolean operators such as AND, OR, and NOT Fuzzy Query matches documents that contain similar terms to a specified term Wildcard Query matches documents that contain terms that match a specified pattern Range Query matches documents that contain terms within a specified range Prefix Query matches documents that contain terms that begin with a specified prefix Multi-term Query matches documents that contain multiple terms Boost Query allows for the boosting of certain queries to give them more weight in the search results Let\u2019s look at an example query. Assume you have a set of bikepacking blog posts - all indexed in Lucene so that they can be easily searchable. If you are looking for an adventure in Norway, where the distance covered is between 300 and 800km, you can construct the following Lucene query: ( title:bikepacking norway ^ 2 OR content:bikepacking norway ) AND distance: [ 300 TO 800 ] This query searches for documents that meet the following criteria (Boolean query with subqueries joined by AND and OR operators): must contain the term \"bikepacking norway\" in either the title or the content field (Multi-term query). The boost operator ^ is used to boost the score of documents that contain the term in the title field (Boost query) must have a distance between 300 and 800 (Range query) Concurrent query execution The concurrency model for a Lucene application is one thread per query at search time, but it\u2019s also possible to execute a single query concurrently using multiple threads to greatly reduce the time of the slowest queries. A Lucene index is segmented, which makes searching it an embarrassingly parallel problem: each query must visit all segments in the index, collecting their globally competitive hits. When the query is single-threaded, that one query thread must visit all segments sequentially. If the index is large, and the queries are costly, those queries will require high CPU cost and wall clock time to find the top hits. When a query is run in multi-threaded mode, the segments in the index are first grouped up front into single thread work units called thread slices. By default, large segments belong to their own thread slice and smaller segments will be put together into a single thread slice, since they are presumably quick to search sequentially by a single thread. But, even though searching a Lucene index is a naturally and embarrassingly parallel problem, using multiple threads for one query incurs an inherent coordination overhead. Concurrent query execution feature is still missing from popular search engines based on Lucene like Elasticsearch, but it\u2019s supported in nrtsearch . Document scoring Lucene scoring uses a combination of the Vector Space Model (VSM) and the Boolean model to determine how relevant a given document is to a user\u2019s query. In general, the idea behind the VSM is that the more times a query term appears in a document relative to the number of times the term appears in all the documents in the collection, the more relevant that document is to the query. It uses the boolean model to first narrow down the documents that need to be scored based on the use of boolean logic in the query specification. The BM25 algorithm - which stands for \u201cBest Match 25\u201d - is a variant of the Vector Space Model that takes into account document length and term frequency. It is used in Lucene as a default scoring VSM. The algorithm calculates a relevance score for each document based on the following formula: score ( q , d ) = sum ( weight ( t , d ) * weight ( t , q ) ) where score(q, d) is the relevance score for the document d with respect to the query q , weight(t, d) is the weight of the term t in the document d , and weight(t, q) is the weight of the term t in the query q . The weights are a function of: term t frequency in document d , total number of documents containing term t and total number of docs in the index, length of the document d and the average document length in the index, tuning parameters that control the effect of term frequency and document length on the relevance score. Custom similarity scoring While the BM25 algorithm works well for many search use cases, it may not be suitable for all applications. In some cases, you may need to customize the similarity scoring algorithm to better match the specific needs of your application. Such cases include: Domain-specific ranking factors - different search applications may have different ranking factors that are important for relevance Personalization - user-specific features and signals, such as the user\u2019s preferences or search history, can be incorporated into the search results to provide more personalized and relevant results Lucene supports defining custom Similarity scorers - it can be a custom algorithm or a continuously retrained ML model. All you need to do then is specify your custom scorer class in the search query. public class CustomSimilarity extends Similarity { public float score ( BasicStats stats , float freq , float docLen ) { float score = . . . // your magic code return score ; } } The document scoring mechanism allows Lucene to return highly relevant search results, given a user query, even in large and complex index. In the next post, Running Apache Lucene at Scale , I will look at how Lucene\u2019s design makes it suitable to run at scale. \u2190 The Tech Stack of Fast, Free, and Customizable Blog Jedr's Blog \u2022 Tech Blog Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments Contents Efficient search Index data structures Query Types Concurrent query execution Document scoring Custom similarity scoring"}, {"url": "https://j.blaszyk.me/tech-blog/tech-stack-of-fast-free-and-customizable-blog/", "title": "The Tech Stack of Fast, Free, and Customizable Blog \u2014 Jedr's Blog", "description": "Building a blog with GatsbyJS, GraphQL, MDX and Github Pages.  Customization, open-source and performance - completely for free.", "headings": ["Jedr's Blog", "The Tech Stack of Fast, Free, and Customizable Blog", "To Blog or Not", "Blogging solutions market", "This Blog\u2019s Tech Stack", "GatsbyJS, GraphQL, MDX", "Github Pages", "Cloudflare CDN", "Developing and Deploying the Blog", "Running locally", "Deploying changes", "Limitations", "Jedr's Blog \u2022 Tech Blog", "Comments"], "content": "The Tech Stack of Fast, Free, and Customizable Blog \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact The Tech Stack of Fast, Free, and Customizable Blog Tech Blog January 26, 2023 \u2022 \u2615\ufe0f 6 min read To Blog or Not We are living in the digital age - publishing content has never been easier thanks to social platform tech giants. After all, they do need to fill up the space on your feed with something, in between showing paid ads. Content type matters. Best holiday pictures from? Instagram. A bit more pictures from a bikepacking trip? Flickr. Career move or a success story? Linkedin. Wanna dive deeper into tech? Medium. Sharing something shorter? Twitter. There seems to be no good solution that ticks all of the boxes to share content you want, on your terms. Search engine optimization (SEO) is another issue. Is the stuff we post to Facebook, Instagram, LinkedIn and Twitter even searchable? Before going on cycling trips I would usually spend quite a bit of time researching places, campsites and routes worth visiting. I don\u2019t remember seeing any content sourced from big tech apps - search engines will usually rank them pretty low in search results. Medium is an exception - if I happen to be lucky enough not to hit the paywall. Blogs are absolute winners in the SEO category. They are indexable by search engines, searchable and readable for us, with tons of valuable content. Blogs are great sources of information whether I\u2019m researching a tech topic or a bikepacking route. It\u2019s because of my bikepacking trips, that I decided to start a blog. I wanted to tell this story, on my terms, without restrictions on how the content is organized and presented. I wanted my experience and well-researched routes to be discoverable by anyone interested - in order to give back, hopefully, an inspiration, to the community. It\u2019s also a great way to reflect on your experience after doing something interesting. And it worked! Take for example \"norway bikepacking\" search query in Google, you should find the story usually in the top 10 results. Norway Bikepacking: Trondheim to Bergen The content is very important for being ranked highly. But as a techie, I did my research to make sure all non-content related metrics will boost my blog in page rank algorithm: performance, SEO practices and mobile usability. I will go over the tech stack of my blog, and some design decisions which made this performant, customizable and completely free - the only recurring cost is a few dollars for the domain name - and it enabled such results from pagespeed.web.dev - a Google tool to measure overall website performance. Blogging solutions market There are tons of options on the market - try searching for \"blog\" . The choice is hard, especially for someone without much technical experience. Questions I asked myself when researching this topic were: Can I host the blog myself? - I didn\u2019t want to lock myself with a single hosting provider. Will ads be displayed on my blog? - Some blogging providers (e.g. wordpress.com) show ads on your blog by default when on a \u201cfree plan\u201d. How much will it cost? - All the costs related to hosting, themes and customization. How easy is it to customize? - Can I easily use code to customize the blog? I wanted to choose my own hosting provider, customize my blog without having to buy \u201cmagical\u201d plugins and eliminate all ads (without having to be on a paid plan). It also had to be fast - the UX was very important to me. This Blog\u2019s Tech Stack I decided to use GatsbyJS which is an open-source static site generator built on top of Node.js using React and GraphQL. You are able to define your blogging templates in React, while your content is written in MDX - Markdown supporting JSX (React) components, which allows you to add interactive React components directly into your copy written in Markdown, like that one: Check this post\u2019s source to verif that it\u2019s just a React <SliderPicker /> defined in MDX file. The static webpage is hosted completely for free thanks to GitHub Pages. To speed up the website load times, I use Cloudflare (amazing) free plan which offers a content delivery network (CDN) along with caching. This setup, along with built-in Gatsby\u2019s optimizations such as image lazy-loading, is sufficient to score near-perfect scores for website performance on popular benchmarks. Let\u2019s go over the building blocks. GatsbyJS, GraphQL, MDX Gatsby.js is a static site generator that uses React.js (for the client-side) and GraphQL (to access data) to build reliable, fast, static websites. You can use React to define pages or templates (like blog post pages) that query for data using GQL. The GQL queries can fetch your data from CMS (like Contentful) or your local filesystem - e.g. blog posts organized in folders. It might sound a bit complex but if you are familiar with React and GQL, the learning curve is not steep at all. The documentation is great and there are lots of starter templates (check Gatsby Starter Libary ). It allows you to start with having a fully functional Gatsby blog so that you can focus on writing content and customizations. The rough structure of your GatsbyJS blog will look like that: \u251c\u2500\u2500 content\n\u2502   \u2514\u2500\u2500 blog-post-1\n\u2502       \u2514\u2500\u2500 index.mdx\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 blog-post-template.js\n\u2502   \u251c\u2500\u2500 blog-index.js\n\u2502   \u2514\u2500\u2500 ... other React components / files\n\u251c\u2500\u2500 ...\n\u251c\u2500\u2500 gatsby-config.js\n\u2514\u2500\u2500 gatsby-node.js You organize your blog posts as folders inside /content . The folder name can map to your post\u2019s slug so that on path /blog-post-1 you would serve content sourced from Markdown (MDX) file content/blog-post-1/index.mdx . The content will be displayed inside a template you defined in React - in our case blog-post-template.js and your blog index (main) page will be defined in blog-index.js . In gatsby-config.js you would need to use a few open-source (and free plugins!), like gatsby-source-filesystem , to use GQL queries to fetch blog post content from your local filesystem. The GQL for e.g. blog post is defined directly in your js template file and looks roughly like this: query BlogPostBySlug ( $slug : String ! ) { mdx ( fields : { slug : { eq : $slug } } ) { id body timeToRead ... # more fields, e.g. images fields { slug } } } Your blog content written in Markdown can be easily rendered inside React post templates. But using Markdown can be quite limiting as it is pretty basic when it comes to layout and customizations. MDX comes to the rescue! It allows you to add JSX (React) components directly into your posts written in Markdown, just like that: import { BlockPicker } from \"react-color\"\n\n_Hello, world!_\n\nHere's a color picker!\n\n<BlockPicker /> Hello, world! Here\u2019s a color picker! #ffa500 When using Gatsby performance is baked in as it automates code splitting, image optimization, inlining critical styles, lazy-loading, prefetching resources, and more to ensure your blog is fast \u2014 from my experience, no manual tuning is required to ace the benchmarks. As you can see Gatsby, GQL and MDX are powerful tools to build customizable, interactive and performant static blogs. Github Pages Github Pages allows you to host static websites directly on Github. It\u2019s free for public repos. All you need to do is to generate your static website and push the code into a branch, gh-pages npm package will help you with automating this process. Once the generated site is pushed to the branch, Github Actions will take it from there and deploy the static website under your domain name. Cloudflare CDN CloudFlare is an awesome reverse cache proxy and CDN that provides DNS and HTTPS. Once you add your static site make sure to enable Cloudflare to cache it - and effectively serve it from CDN Edge Cache - this should visibly speed up the load times. Whenever you make a change to your site you would need to remember to manually purge the cache in Cloudflare (it probably can be automated using Github Actions). Developing and Deploying the Blog Running locally For local dev Gatsby offers a hot-reloading development environment, just run gatsby develop . Once I\u2019m happy with my changes I would usually run the production build and serve it locally to double-check that everything is generated correctly, you can do it via: gatsby build && gatsby serve I found that sometimes the develop server is not 100% consistent with production builds when it comes to CSS styling - all issues were related to Chrome, Safari, etc. default styles being overwritten by develop server, but for prod build the default styles were taking precedence (e.g. extra margin under <p> tags). Though I didn\u2019t have that issue for a long time, perhaps upgrading Gatsby fixed it. Deploying changes Once I\u2019m happy with the results, I do the following: Run yarn deploy what maps to yarn build && gh-pages -d public , the generated static website from the build folder will be pushed to github branch. Github Actions will start a deployment process, it can take a while until the process finishes. After that\u2019s done I go to Cloudflare to purge the cache. That\u2019s all! You can optionally go to Google Search Console (SEO tool) and tell it directly to index your newly created blog post - so that it can appear in search results ASAP. Limitations The blog is static - it means it\u2019s fast but also it means there is no server able to serve dynamic content. User accounts, reactions, comments - they are not natively supported by Gatsby - but there are ways for SSR with Gatsby . Also, there are many (freemium and paid) solutions on the market which at least allow you to embed reactions and comments. I store images directly in the repo, they are also included in the static build. This will work until I don\u2019t hit GitHub repo size limit (afaik it\u2019s 100GB). I optimize, and downsize all the images so for now it works fine. But if you are planning on storing a lot of images you can use any image CMS/CDN provider and integrate it with Gatsby directly - read more about it here . The developer is in the driver\u2019s seat, meaning I can customize the blog as I wish but I\u2019m also responsible for all housekeeping stuff e.g. adding SEO meta tags for search engines. Gatsby won\u2019t complain if you forget add title and description tags (very important for SEO) - so in that respect, I find WordPress much easier and safer to use - it by nature works well with search engines by asking you to provide important meta tags. Hope you enjoyed this article. This blog is open-source , feel free to check out, fork or star the repo. \u2190 Exploring Apache Lucene - Part 1: The Index Exploring Apache Lucene - Part 2: Search and Ranking \u2192 Jedr's Blog \u2022 Tech Blog Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments Contents To Blog or Not Blogging solutions market This Blog's Tech Stack GatsbyJS, GraphQL, MDX Github Pages Cloudflare CDN Developing and Deploying the Blog Running locally Deploying changes Limitations"}, {"url": "https://j.blaszyk.me/tech-blog/exploring-apache-lucene-index/", "title": "Exploring Apache Lucene - Part 1: The Index \u2014 Jedr's Blog", "description": "Exploring Apache Lucene's core concepts - inverted index, insertions and deletions.", "headings": ["Jedr's Blog", "Exploring Apache Lucene - Part 1: The Index", "Lucene\u2019s jargon", "Representing data with Lucene", "Inverted Index", "DocValues", "Stored Fields", "Insertions", "Deletions", "Updates", "Visualising Lucene\u2019s segment merges", "Lucene\u2019s data storage architecture: pros and cons", "Jedr's Blog \u2022 Tech Blog", "Comments"], "content": "Exploring Apache Lucene - Part 1: The Index \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Exploring Apache Lucene - Part 1: The Index Tech Blog January 16, 2023 \u2022 \u2615\ufe0f 6 min read When I joined Yelp in 2020, as a software engineer, I became part of the Ranking Platform team. The team is responsible for the development and maintenance of Yelp\u2019s search and ranking infrastructure, a crucial part of our ecosystem, that allows for business search, reviews search and powers the internal real-time ad bidding system. At that time, I was part of an initiative to revamp our core search & ranking infra in terms of performance and cost efficiency. This effort resulted in an open-source project - nrtsearch - which, as of early 2023, is used for the majority of search and ranking use cases at Yelp, with more migrations underway set to replace Elasticsearch. With nrtsearch our p50s, p95s and p99s improved by 30-50% while costs dropped by as much as 40% in some cases. You can read more about the nrtsearch project results in the blog post from Yelp\u2019s Engineering Blog: Nrtsearch: Yelp\u2019s Fast, Scalable and Cost Effective Search Engine Nrtsearch development was led by senior folks, industry experts who know ins and outs of Apache Lucene - the core search library on top of which nrtsearch was built. I worked on well-scoped projects, like scalable ingestion, logging, plugin development and scatter-gather service, which allows for application-level cluster sharding. While I enjoyed those projects, I feel that, for a long time, I treated the nrtsearch core search functionality as a black-box - not fully understanding its internals. Therefore, I decided to take a step back, explore, and understand Apache Lucene - a search library at the core of nrtsearch and Elasticsearch (Elastic - a company built around Elasticsearch has a market cap of 5B$). This is the first tech blog post from the series Exploring Apache Lucene in which I\u2019ll describe, in the bottom-up manner, the building blocks of modern search engines. Lucene\u2019s jargon Before starting, I want to explain some terms closely linked to Apache Lucene. They don\u2019t necessarily map 1:1 to other DB technologies, what is at times confusing when reading Lucene\u2019s docs and related blog posts. document - a record, the unit of search and index, a set of fields. Documents are added to a Lucene index, and can be retrieved by a search query. field - a typed slot in a document. A field is a sequence of terms. Document can have multiple fields. term - a value from the source document, the unit of search. Used for building the inverted index index - a collection of documents, typically with the same schema. inverted index - an internal data structure that maps terms to documents by ID, efficient for text-search queries. stored fields - an array of all field values per field, in document order, stored in index in non-inverted manner. Efficient for getting many field values for a few docs. doc values - Lucene\u2019s column-stride field value storage. Efficient for getting a few field values for many docs. Useful for sorting and faceting. index segments - Lucene indexes may be composed of multiple sub-indexes, or segments. Each segment is a fully independent index, which could be searched separately. Representing data with Lucene Inverted Index Inverted index is a data structure that maps terms (i.e. words or phrases) to the documents that contain them. The index is built by analyzing the text of the documents and extracting terms from them. The inverted index allows for fast and efficient searching by providing a way to look up documents that contain a specific term or set of terms. It also provides a way to rank the relevance of the search results by determining how many of the search terms match to a specific document. The inverted index is composed of two substructures: term dictionary - groups all the terms included in the documents in a sorted list. postings list - creates a list of each term, indicating the documents where the term appears. In the above example we can see three documents indexed into Lucene\u2019s inverted index. Each of the document\u2019s conten is analyzed (tokenized) into terms which are inserted into inverted index. Since the terms in the dictionary are sorted, we can quickly find a term (think binary search), and subsequently its occurrences in the postings-structure. This is contrary to a \u201cforward index\u201d, which lists terms related to a specific document. DocValues Inverted index builds a mapping of terms found in all the documents in the index to a list of documents that the term appears in. This makes search very fast - since users search by terms, having a ready list of term-to-document values makes the query process faster. For other features that are associated with search, such as sorting, faceting, and highlighting, this approach is not very efficient. The faceting engine, for example, must look up each term that appears in each document that will make up the result set and pull the document IDs to build the facet list. DocValue fields are column-oriented fields with a document-to-value mapping built at index time - an uninverted (forward) index. This approach can make lookups for faceting, sorting, and grouping much faster, as we can retrieve fields for multiple docs with the single disk seek (utilizing the filesystem cache). DocValues should be preferred over \u201cstored fields\u201d unless the complete document is being retrieved by a query. Stored Fields Similar to DocValues, Stored fields have been created to effectively persist values (differently to how inverted index does it) of the document fields, and then, retrieve them when needed. Stored fields are organised in a row manner. This means that, given a set of fields, for each document, the values of these fields are concatenated in a row. The rows are then stored sequentially on disk according to their Lucene doc id. Each row may have a different size depending on the number of fields defined for that document and data types (e.g. string or text fields have variable sizes). The pointers to each row are stored for allowing fast access to them. This technique is particularly useful if our search query needs to return complete documents (with all their fields) rather than just a few fields. DocValues and Stored fields approached are not mutually exclusive settings, a given field, apart from being indexed into the inverted index, can have DocValues and Stored fields enabled. The queries that will be run against the index should determine which of these approaches is used. It\u2019s important to keep in mind that both of approached are effectively duplicating data and storing them in a format suitable for specific the access pattern - so enabling both may result in a bloated index size. Insertions When building inverted indexes, we need to prioritize things like: search speed, index compactness, indexing speed and the time it takes for new changes to become visible. Search speed and index compactness are related: when searching over a smaller index, less data needs to be processed, and more of it will fit in memory. Both, particularly compactness, come at the cost of indexing speed. To minimize index sizes, various compression techniques are used. For example, when storing the postings (which can get quite large), Lucene does tricks like delta-encoding - e.g. [1, 9, 420] is stored as [1, 8, 411] - so small numbers can be saved with less bytes. When new documents are added, the index changes are first buffered in memory. Eventually, the index files in their entirety, are flushed to disk. The written files make up an index segment. Lucene index segments are \u201cwrite-once\u201d files: once a segment has been written to permanent storage (to disk), it is never altered. This means that indexes are actually comprised of several files which are each subsets of the full index. To prevent eternal fragmentation of the index, segments are periodically merged. In the example above ( source ) we have two segments, each consisting of a single document. On the right side of the image, we can see a result of a segment merge - where 2 segments are merged to form a new segment. Deletions For each segment, Lucene maintains a per-segment bitset (vector of 0 and 1s). Flipping a bit from 1 to 0 signals to Lucene that a document is deleted. All subsequent searches simply skip any deleted documents. It is not until segments are merged that the bytes consumed by deleted documents are reclaimed, as after the merge the resulting segment won\u2019t contain deleted documents. Deleting the documents in-place in the existing segment would be far too costly. Updates Updating a previously indexed document is a \u201ccheap\u201d delete followed by a re-insertion of the document. This means that updating a document is even more expensive than adding it in the first place. Thus, storing things like rapidly changing values in a Lucene index is probably not a good idea \u2013 there is no in-place update of values. Visualising Lucene\u2019s segment merges Below there is a visualisation of how Lucene handles insertions, deletion and segment merges (taken from this great blog post by Michael McCandless). Each segment is a bar, whose height is the size (in MB) of the segment. Segments on the left are the largest; as new segments are flushed, they appear on the right. The dark grey band on top of each segment shows the proportion of deletions in that segment. Lucene\u2019s data storage architecture: pros and cons (-) Document insertions require writing a new segment. Which can be costly for single-document insertions. Therefore bulk inserts are preferred. (+) Segments are never modified in-place, so they are filesystem cache-friendly. Segments can be searched concurrently lock-free, with no risk of race conditions. It also allows for concurrent query execution. (+) The inverted index allows for fast and efficient searching by providing a way to look up documents that contain a specific term or set of terms. (+) Terms compression. Deduplication of terms within a segment, it can save a lot of space for very high-frequency terms. (+) Terms are uniquely identified by an ordinal, useful for sorting and faceting. (+) DocValues optimization can help with efficient sorting and faceting. Stored fields can help with retrieving whole documents. Exploring Lucene series is continued in: Exploring Apache Lucene - Part 2: Search and Ranking . \u2190 Geometric Deep Learning - an overview The Tech Stack of Fast, Free, and Customizable Blog \u2192 Jedr's Blog \u2022 Tech Blog Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments Contents Lucene's jargon Representing data with Lucene Inverted Index DocValues Stored Fields Insertions Deletions Updates Visualising Lucene's segment merges Lucene's data storage architecture: pros and cons"}, {"url": "https://j.blaszyk.me/tech-blog/geometric-deep-learning-overview/", "title": "Geometric Deep Learning - an overview \u2014 Jedr's Blog", "description": "Series of posts covering learnings from my MEng thesis \"Geometric Deep Learning for Subcortical Brain Shape Analysis\".", "headings": ["Jedr's Blog", "Geometric Deep Learning - an overview", "Non-Euclidean domains", "Spectral methods", "Spatial methods", "Why spatial is better than spectral", "Introduction by example: GCN implemented in PyTorch Geometric", "References", "Jedr's Blog \u2022 Tech Blog", "Comments"], "content": "Geometric Deep Learning - an overview \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Geometric Deep Learning - an overview Tech Blog June 10, 2020 \u2022 \u2615\ufe0f 5 min read Non-Euclidean domains Spectral methods Spatial methods Why spatial is better than spectral Introduction by example: GCN implemented in PyTorch Geometric I decided to write a series of articles to cover the things I\u2019ve learned while working on my MEng thesis. My work is focused on applying Geometric Deep Learning methods for shape analysis in the medical setting. The first post is an overview of Geometric Deep Learning. Geometric deep learning (GDL) , a term first proposed by Bronstein et al. [1] , has emerged aiming to generalize deep learning models to non-Euclidean domains. This novel field in the world of machine learning was successfully used for building recommender systems [2] , protein function prediction [3] , fake news detection [4] , and detection of cancer-beating molecules in food [5] . GDL owes its success to the fact that it operates directly on the relational structure of a given problem. An example of such a structure is a graph. It can describe various concepts ranging from a social network to a chemical compound. Most GNN architectures are based on message passing (spatial methods), where at each layer the nodes update\ntheir hidden representations by aggregating information they collect from their neighbours. A crucial difference from traditional neural networks operating on grid-structured data is the absence of canonical ordering of the nodes in a graph. To address this, usually the aggregation function is constructed to be invariant to neighbourhood permutations. Non-Euclidean domains Graph. A graph G is a pair (V,E) with the finite set of vertices V and edges E . It captures interactions (edges) between individual units (nodes). Manifold. A manifold is a is a locally Euclidean space. In computer graphics, shapes are represented as discrete 2-dimensional manifolds. A discrete manifold has vertices uniformly sampled from the surface of the manifold with edges expressing the local structure of the shape. It\u2019s commonly called a triangular mesh. Spectral methods Spectral methods were the first approach to generalize convolution operation to non-Euclidean domains. In practice, they are rarely used because they are computationally inefficient and don\u2019t generalize well to different domains. Spectral graph convolution draws inspiration from the Euclidean convolution in a spectral domain. The Fourier basis is used to compute spectral convolution in the classical signal processing (Read this for an in-depth explanation of Convolution theorem). Given a graph, one way to generalize a convolutional architecture is to look at linear operators that commute with the graph Laplacian. This property implies operating on the spectrum of the graph weights, given by the eigenvectors of the graph Laplacian. The concept of graph convolution is explained more in-depth in here . Spatial methods Spatial methods are preferred over the spectral methods for a number of reasons . The spatial convolution is considered a more versatile method for learning on non-Euclidean structures. Figure 1: 2D Convolution vs. Graph Convolution. Spatial methods define graph convolutions based on a node\u2019s spatial relations, which is analogous to the convolution operation on the classical CNN. Images can be considered a special form of a graph with each pixel representing a node, connected to each neighboring pixels. A filter would be applied on the patch of the image including the pixel and its neighboring nodes. Similarly, spatial methods convolve a given node\u2019s features, using a patch operator, with its neighbors\u2019 features. The intuition about the spatial graph convolutions is that this operation propagates and updates node features along edges. Why spatial is better than spectral Spatial models are preferred over spectral models due to efficiency, generality, and flexibility issues. Spectral models are less efficient than spatial models as they need to perform eigendecomposition or handle the whole graph at the same time (e.g. mesh completion scenario). Spatial models are more scalable to large graphs as they directly perform convolutions in the graph domain via information propagation (i.e. message passing). The computation can be performed in a batch of nodes instead of the whole graph. Moreover, spectral models assume a fixed graph and because they rely on a graph Fourier basis they generalize poorly to new graphs. This is because any perturbation to a graph results in a change of eigenbasis. Spatial models perform graph convolutions locally on each node, which allows for weight sharing across different structures and locations. Finally, spectral methods are limited to undirected graphs whereas spatial methods can handle a bigger variety of graphs such as edge inputs, directed graphs, signed graphs and heterogeneous graphs because of the flexibility of the aggregation function Introduction by example: GCN implemented in PyTorch Geometric PyTorch Geometric [6] is a geometric deep learning extension library for PyTorch. It is a library for deep learning on irregularly structured input data such as graphs, point clouds, and manifolds, also known as geometric deep learning, from a variety of published papers. It consists of an easy-to-use mini-batch loader for many small and single big graphs, multi gpu-support and a large number of common benchmark datasets. PyTorch Geometric makes use of Generic Message Passing Scheme to implement any convolutional operator. The message passing scheme consists of 2 steps: propagate step - messages from nodes are propagated to their local neighborhoods. update step - embedded node\u2019s features are updated by the message vector. Graph Convolutional Network (GCN) was defined by Kipf et al. [7] . The intuition of this method is that it can alleviate the problem of overfitting on local neighborhood structures for graphs with very wide node degree distributions, such as social networks, citation networks, and many other real-world graph datasets. The computational complexity of this approach is O ( n ) O(n) O ( n ) . It applies simple filters acting on the 1-hop neighborhood of the graph in the spatial domain. It can be expressed in the generic message-passing scheme as: msg ( x i , x j ) = 1 deg \u2061 ( x i ) d e g ( x j ) ( x j \u0398 ) \\text{msg}(x_i, x_j) = \\frac{1}{\\sqrt{\\deg(x_i)} \\sqrt{deg(x_j)}} \\left( \\mathbf{x}_j\\mathbf{\\Theta} \\right) msg ( x i \u200b , x j \u200b ) = de g ( x i \u200b ) \u200b d e g ( x j \u200b ) \u200b 1 \u200b ( x j \u200b \u0398 ) x \u2032 i = \u2211 j \u2208 N ( i ) \u222a { i } msg ( x i , x j ) \\mathbf{x'}_i = \\sum_{j \\in \\mathcal{N}(i) \\cup \\{ i \\}} \\text{msg}(x_i, x_j) x \u2032 i \u200b = j \u2208 N ( i ) \u222a { i } \u2211 \u200b msg ( x i \u200b , x j \u200b ) where neighboring node features are first transformed by a weight matrix \u0398 \\mathbf{\\Theta} \u0398 , normalized by their degree, and finally summed up.\nThis formula can be divided into the following steps: Add self-loops to the adjacency matrix. Linearly transform node feature matrix. Normalize node features. Sum up neighboring node features. Return new node embeddings. Pytorch Geometric provides the MessagePassing class, all we need to do to implement GCN is write our update() and message() functions. class GCNConv ( MessagePassing ) : def __init__ ( self , in_channels , out_channels ) : super ( GCNConv , self ) . __init__ ( aggr = 'add' ) # \"Add\" aggregation. self . lin = torch . nn . Linear ( in_channels , out_channels ) def forward ( self , x , edge_index ) : # x has shape [N, in_channels] # edge_index has shape [2, E] # Step 1: Add self-loops to the adjacency matrix. edge_index = add_self_loops ( edge_index , num_nodes = x . size ( 0 ) ) # Step 2: Linearly transform node feature matrix. x = self . lin ( x ) # Step 3-5: Start propagating messages. return self . propagate ( edge_index , x = x ) def message ( self , x_j , edge_index , size ) : # x_j has shape [E, out_channels] # Step 3: Normalize node features. row , col = edge_index\n        deg = degree ( row , size [ 0 ] , dtype = x_j . dtype ) deg_inv_sqrt = deg . pow ( - 0.5 ) deg_inv_sqrt [ deg_inv_sqrt == float ( 'inf' ) ] = 0 norm = deg_inv_sqrt [ row ] * deg_inv_sqrt [ col ] return norm . view ( - 1 , 1 ) * x_j def update ( self , aggr_out ) : # aggr_out has shape [N, out_channels] # Step 5: Return new node embeddings. return aggr_out Note: Step 4 is done by setting aggr='add' when initialising GCNConv . Wasn\u2019t too bad, right? PyTorch Geometric offers implementations of most popular convolutional layers and provides lots of examples. Check it out on github . Now we can get our hands dirty with a real-world problem. The Cora dataset consists of 2708 scientific publications classified into one of seven classes. The citation network consists of 5429 links. Each publication in the dataset is described by a 0/1-valued word vector indicating the absence/presence of the corresponding word from the dictionary. We can create a simple model for the semi-supervised classication of each publication in the graph. Our model is constructed as follows: class Net ( torch . nn . Module ) : def __init__ ( self ) : super ( Net , self ) . __init__ ( ) self . conv1 = GCNConv ( dataset . num_features , 16 ) self . conv2 = GCNConv ( 16 , dataset . num_classes ) def forward ( self ) : x , edge_index , edge_weight = data . x , data . edge_index , data . edge_attr\n        x = F . relu ( self . conv1 ( x , edge_index , edge_weight ) ) x = F . dropout ( x , training = self . training ) x = self . conv2 ( x , edge_index , edge_weight ) return F . log_softmax ( x , dim = 1 ) With just 140 nodes in the training set we are able to achieve >80% classification accuracy for the rest of the nodes, the resulting classified Cora dataset looks as follows: Figure 2: Semi-supervised node classification result on Cora dataset. It shows that Geometric Deep Learning is an elegant and performant approach when dealing with non-Euclidean structures. References [1] Bronstein, Michael M., et al. \u201cGeometric deep learning: going beyond euclidean data.\u201d IEEE Signal Processing Magazine 34.4 (2017): 18-42. [2] Monti, Federico, Michael Bronstein, and Xavier Bresson. \u201cGeometric matrix completion with recurrent multi-graph neural networks.\u201d Advances in Neural Information Processing Systems. 2017. [3] Gainza, Pablo, et al. \u201cDeciphering interaction fingerprints from protein molecular surfaces using geometric deep learning.\u201d Nature Methods 17.2 (2020): 184-192. [4] Twitter: fabula_ai [5] Veselkov, Kirill, et al. \u201cHyperFoods: Machine intelligent mapping of cancer-beating molecules in foods.\u201d Scientific reports 9.1 (2019): 1-12. [6] Kipf, Thomas N., and Max Welling. \u201cSemi-supervised classification with graph convolutional networks.\u201d arXiv preprint arXiv:1609.02907 (2016). [7] Fey, Matthias, and Jan Eric Lenssen. \u201cFast graph representation learning with PyTorch Geometric.\u201d arXiv preprint arXiv:1903.02428 (2019). Exploring Apache Lucene - Part 1: The Index \u2192 Jedr's Blog \u2022 Tech Blog Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments Contents Non-Euclidean domains Spectral methods Spatial methods Why spatial is better than spectral Introduction by example: GCN implemented in PyTorch Geometric References"}, {"url": "https://j.blaszyk.me/through-the-lens/mallorca-in-spring/", "title": "Mallorca in Spring - Through the Lens \u2014 Jedr's Blog", "description": "Through the Lens: Mallorca in Spring", "headings": ["Jedr's Blog", "Mallorca in Spring", "Jedr's Blog \u2022 Through the Lens", "Comments"], "content": "Mallorca in Spring - Through the Lens \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Mallorca in Spring Through The Lens April 1, 2023 \u2022 Mallorca, Spain \u2022 13 \u2190 Tenerife Pleasures Jedr's Blog \u2022 Through the Lens Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments"}, {"url": "https://j.blaszyk.me/through-the-lens/tenerife-pleasures/", "title": "Tenerife Pleasures - Through the Lens \u2014 Jedr's Blog", "description": "Through the Lens: Tenerife Pleasures", "headings": ["Jedr's Blog", "Tenerife Pleasures", "Jedr's Blog \u2022 Through the Lens", "Comments"], "content": "Tenerife Pleasures - Through the Lens \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Tenerife Pleasures Through The Lens December 12, 2022 \u2022 Tenerife \u2022 17 \u2190 Izery Mountains Bikepacking Mallorca in Spring \u2192 Jedr's Blog \u2022 Through the Lens Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments"}, {"url": "https://j.blaszyk.me/through-the-lens/izery-mountains-bikepacking/", "title": "Izery Mountains Bikepacking - Through the Lens \u2014 Jedr's Blog", "description": "Through the Lens: Izery Mountains Bikepacking", "headings": ["Jedr's Blog", "Izery Mountains Bikepacking", "Jedr's Blog \u2022 Through the Lens", "Comments"], "content": "Izery Mountains Bikepacking - Through the Lens \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Izery Mountains Bikepacking Through The Lens September 5, 2022 \u2022 Karkonosze, Poland \u2022 13 \u2190 Norway Bikepacking Tenerife Pleasures \u2192 Jedr's Blog \u2022 Through the Lens Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments"}, {"url": "https://j.blaszyk.me/through-the-lens/norway-bikepacking/", "title": "Norway Bikepacking - Through the Lens \u2014 Jedr's Blog", "description": "Through the Lens: Norway Bikepacking", "headings": ["Jedr's Blog", "Norway Bikepacking", "Jedr's Blog \u2022 Through the Lens", "Comments"], "content": "Norway Bikepacking - Through the Lens \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Norway Bikepacking Through The Lens August 12, 2022 \u2022 Norway \u2022 20 \u2190 Iceland Roadtrip Izery Mountains Bikepacking \u2192 Jedr's Blog \u2022 Through the Lens Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments"}, {"url": "https://j.blaszyk.me/through-the-lens/iceland-4x4-roadtrip/", "title": "Iceland Roadtrip - Through the Lens \u2014 Jedr's Blog", "description": "Through the Lens: Iceland Roadtrip", "headings": ["Jedr's Blog", "Iceland Roadtrip", "Jedr's Blog \u2022 Through the Lens", "Comments"], "content": "Iceland Roadtrip - Through the Lens \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Iceland Roadtrip Through The Lens July 11, 2022 \u2022 Iceland \u2022 19 Norway Bikepacking \u2192 Jedr's Blog \u2022 Through the Lens Blog by Jedr Blaszyk . Tech, cycling, photography & travelling. Comments"}, {"url": "https://j.blaszyk.me/contact/", "title": "Contact \u2014 Jedr's Blog", "description": "Blog by Jedr Blaszyk. Bikepacking, photography & tech.", "headings": ["Jedr's Blog", "Contact"], "content": "Contact \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Contact I currently work on ranking systems and data ingestion @ Yelp. You can reach me at [email\u00a0protected] Have a great day! :)"}, {"url": "https://j.blaszyk.me/road-to-195/", "title": "Road to 195 \u2014 Jedr's Blog", "description": "Reporting on a progress to visit all 195 countries in the world.", "headings": ["Jedr's Blog", "Road to 195"], "content": "Road to 195 \u2014 Jedr's Blog Jedr's Blog Blog Through the Lens Tech Road to 195 Contact Road to 195 Keeping track of the progress. Progress: 32 / 195"}]